version: 2.1

executors:
  docker:
    environment:
      API_IMAGE_NAME: shellhubio/shellhub-api
      SSH_IMAGE_NAME: shellhubio/shellhub-ssh
      WS_IMAGE_NAME: shellhubio/shellhub-ws
      UI_IMAGE_NAME: shellhubio/shellhub-ui
      GATEWAY_IMAGE_NAME: shellhubio/shellhub-gateway
      AGENT_IMAGE_NAME: shellhubio/agent
      DOCKER_CLI_EXPERIMENTAL: enabled
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  build:
    executor: docker
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build API microservice
          working_directory: api
          command: docker build -t $API_IMAGE_NAME:latest .
      - run:
          name: Build SSH microservice
          working_directory: ssh
          command: docker build -t $SSH_IMAGE_NAME:latest .
      - run:
          name: Build WS microservice
          working_directory: ws
          command: docker build -t $WS_IMAGE_NAME:latest .
      - run:
          name: Build UI microservice
          working_directory: ui
          command: docker build -t $UI_IMAGE_NAME:latest .
      - run:
          name: Build API Gateway microservice
          working_directory: gateway
          command: docker build -t $GATEWAY_IMAGE_NAME:latest .
      - run:
          name: Build agent images
          working_directory: agent
          command: |
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
            docker build -f Dockerfile.amd64 -t $AGENT_IMAGE_NAME:amd64 .
            docker build -f Dockerfile.arm32v6 -t $AGENT_IMAGE_NAME:arm32v6 .
            docker build -f Dockerfile.arm64v8 -t $AGENT_IMAGE_NAME:arm64v8 .
      - run:
          name: Archive Docker images
          command: |
            docker save $(docker images | awk '{if ($1 ~ /shellhubio\//) print $3}') -o images.tar
            docker images | awk '{if ($1 ~ /shellhubio\//) print $1 " " $2 " " $3}' > tags.txt
      - persist_to_workspace:
          root: .
          paths:
            - ./images.tar
            - ./tags.txt
  push:
    executor: docker
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Setup DockerHub credentials
          command: echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Load archived Docker images
          command: |
            docker load -i /tmp/workspace/images.tar
            awk '{ print "docker tag "$3" "$1":"$2"" | "/bin/sh"}' /tmp/workspace/tags.txt
      - run:
          name: Publish API microservice image
          command: docker push $API_IMAGE_NAME:latest
      - run:
          name: Publish SSH microservice image
          command: docker push $SSH_IMAGE_NAME:latest
      - run:
          name: Publish WS microservice image
          command: docker push $WS_IMAGE_NAME:latest
      - run:
          name: Publish UI microservice image
          command: docker push $UI_IMAGE_NAME:latest
      - run:
          name: Publish API Gateway microservice image
          command: docker push $GATEWAY_IMAGE_NAME:latest
      - run:
          name: Publish agent images
          command: |
            docker push $AGENT_IMAGE_NAME:amd64
            docker push $AGENT_IMAGE_NAME:arm32v6
            docker push $AGENT_IMAGE_NAME:arm64v8
            docker manifest create -a $AGENT_IMAGE_NAME $AGENT_IMAGE_NAME:amd64 $AGENT_IMAGE_NAME:arm64v8 $AGENT_IMAGE_NAME:arm32v6
            docker manifest annotate $AGENT_IMAGE_NAME $AGENT_IMAGE_NAME:amd64 --os linux --arch amd64
            docker manifest annotate $AGENT_IMAGE_NAME $AGENT_IMAGE_NAME:arm32v6 --os linux --arch arm
            docker manifest annotate $AGENT_IMAGE_NAME $AGENT_IMAGE_NAME:arm64v8 --os linux --arch arm64
            docker manifest push $AGENT_IMAGE_NAME
workflows:
  version: 2
  master:
    jobs:
      - build:
          filters:
            branches:
              only: master    
      - push:
          requires:
            - build
          filters:
            branches:
              only: master
